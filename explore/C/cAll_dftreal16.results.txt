$ cAll_dftreal16.sh 
#
# Compiling
#
gcc -o c_dftreal16_print_NITER.bin    c_dftreal16_print_NITER.c 
gcc -o c_dftreal16fftw3.bin          c_dftreal16fftw3.c -lfftw3 -lm
gcc -o c_dftreal16flat.bin           c_dftreal16flat.c
#
# Testing
#
c_dftreal16_print_NITER.bin
NITER: 1e+07
#
time c_dftreal16fftw3.bin    # FFTW3 lib was compiled with -O3 (speed advantage)

real	0m0.569s
user	0m0.564s
sys	0m0.000s
#
time c_dftreal16flat.bin     # Not compiled with -O3

real	0m0.996s
user	0m0.992s
sys	0m0.000s
#
set +v
--------
#
# Compiling
#
gcc -O3 -fomit-frame-pointer -mtune=native -malign-double -fstrict-aliasing -fno-schedule-insns -ffast-math -c -o cO3_dftreal16_common.o    cO3_dftreal16_common.c  # Same optimization flags as used by in FFTW3.3.3
gcc -o cO3_dftreal16_print_NITER.bin    cO3_dftreal16_common.o cO3_dftreal16_print_NITER.c 
#
gcc -o cO3_dftreal16fftw3.bin          cO3_dftreal16_common.o cO3_dftreal16fftw3.c -lfftw3 -lm
gcc -o cO3_dftreal16flat.bin           cO3_dftreal16_common.o cO3_dftreal16flat.c
gcc -o cO3_dftreal16fftw3real.bin          cO3_dftreal16_common.o cO3_dftreal16fftw3real.c -lfftw3 -lm
gcc -o cO3_dftreal16flat_hh.bin           cO3_dftreal16_common.o cO3_dftreal16flat_hh.c
#
# Testing
#
cO3_dftreal16_print_NITER.bin
NITER: 1e+07
#
#--- First comparison: compute the full X[0..N-1], ignoring that x is a real signal
#
./cO3_dftreal16fftw3.bin
test duration: 0.585532 seconds (cO3_dftreal16fftw3.c)
#
#time cO3_dftreal16flat.bin
#
#--- Second comparison: compute only X[0..1+N/2] because x is a real signal
#
./cO3_dftreal16fftw3real.bin
plan duration: 0.000320927 seconds (cO3_dftreal_N_fftw3real_main.c)
test duration: 0.351769 seconds (cO3_dftreal_N_fftw3real_main.c)
#
./cO3_dftreal16flat_hh.bin
test duration: 0.238871 seconds (cO3_dftreal16flat_hh.c)
#
./cO3_dftreal16flat_sr_hh.bin
test duration: 0.238797 seconds (cO3_dftreal16flat_sr_hh.c)
#
./cO3_dftreal16flat_msr_hh.bin
test duration: 0.238615 seconds (cO3_dftreal16flat_msr_hh.c)
#
set +v
