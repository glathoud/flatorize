/*global console document asmjs_perf_all_together genflatcode_asmjs_dftreal1024flat asmjs_remove_all_together_from_gen asmjs_perf_compare_gen_dft asmjs_perf_format_one_result dftreal1024flat_asmjsGen*/

function asmjs_perf_all_together()
{
    // Make sure we have an implementation
    genflatcode_asmjs_dftreal1024flat();

    // For a meaningful comparison we need to deactivate asm.js
    // because asm.js would compile the Typed Array version,
    // but not the normal array version.
    var flatorize = {
        fun : dftreal1024flat.getDirect()  // Generated by `flatorize`
        , normal_array : true 
    }
    
    , flatorize_asmjs = {
        gen : dftreal1024flat_asmjsGen
    }
       
    , result = asmjs_perf_compare_gen_dft( 
        1024
        , { flatorize : flatorize
            ,  flatorize_asmjs      : flatorize_asmjs
          }
    )
    ;

    console.log( 'asmjs_perf_all_together: result:', result );

    var outnode = asmjs_perf_all_together.outnode;
    if (!outnode)
    {
        outnode = asmjs_perf_all_together.outnode = document.getElementById( 'asmjs_perf_all_together_output' );
        outnode.innerHTML = '';
    }
    
    outnode.innerHTML += asmjs_perf_format_one_result( 'flatorize              ', result.flatorize ) + '\n'
        + asmjs_perf_format_one_result( 'flatorize.getAsmjsGen()', result.flatorize_asmjs ) + '\n'
        + '-> speedup: ' 
        + asmjs_perf_prop_2_percent_string( result.flatorize_asmjs.speed_iter_per_sec / result.flatorize.speed_iter_per_sec ) + '\n'
        + '\n'
    ;
}
